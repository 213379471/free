name: ZeroTier+V2ray

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install ZeroTier
        run: |
          curl -s https://install.zerotier.com | sudo bash
          sudo zerotier-cli info

      - name: Start ZeroTier
        env:
          IP_ASSIGNMENT: 10.144.254.254
          ZEROTIER_NETWORK_ID: ${{ secrets.ZEROTIER_NETWORK_ID }}
          ZEROTIER_TOKEN: ${{ secrets.ZEROTIER_TOKEN }}
        run: |
          memberId=$(sudo zerotier-cli info | awk -F" " '{print $3}')
          echo "Member Id is ${memberId}"
          curl -X POST -H "Content-Type: application/json" -H "Authorization: token ${ZEROTIER_TOKEN}" -d "{\"config\": { \"ipAssignments\": [ \"$IP_ASSIGNMENT\" ] }}" https://api.zerotier.com/api/v1/network/${ZEROTIER_NETWORK_ID}/member/${memberId}
          sudo zerotier-cli join ${ZEROTIER_NETWORK_ID}
          sleep 5

      - name: Start V2ray
        timeout-minutes: 60
        env:
          V2RAY_CONFIG_JSON: ${{ secrets.V2RAY_CONFIG_JSON }}
        run: |
          echo $V2RAY_CONFIG_JSON > v2ray-runtime-config.json
          docker run --network=host --name v2ray -v ${{ github.workspace }}/v2ray-runtime-config.json:/etc/v2fly/config.json -p 10086:10086 v2fly/v2fly-core run -c /etc/v2fly/config.json

      - name: Immediately Cleanup
        if: always()
        env:
          ZEROTIER_NETWORK_ID: ${{ secrets.ZEROTIER_NETWORK_ID }}
          ZEROTIER_TOKEN: ${{ secrets.ZEROTIER_TOKEN }}
        # https://docs.zerotier.com/central/v1/#operation/deleteNetworkMember
        run: |
          memberId=$(sudo zerotier-cli info | awk -F" " '{print $3}')
          curl -X DELETE -H "Authorization: token ${ZEROTIER_TOKEN}" https://api.zerotier.com/api/v1/network/${ZEROTIER_NETWORK_ID}/member/${memberId}
